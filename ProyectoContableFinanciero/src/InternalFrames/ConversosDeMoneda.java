/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package InternalFrames;

import Entidades.Divisas;
import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import javax.swing.JOptionPane;
import org.json.JSONObject;


public class ConversosDeMoneda extends javax.swing.JInternalFrame {

    double dolarOficialCompra;
    double dolarOficialVenta;
    double dolarBlueCompra;
    double dolarBlueVenta; 
    double euroOficialCompra;
    double euroOficialVenta;
    double euroBlueCompra;
    double euroBlueVenta;
    /**
     * Creates new form ConversosDeMoneda
     */
    public ConversosDeMoneda() throws Exception {
        initComponents();
        apiMonedas();
        cargarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jcDivisas = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtMuestaVenta = new javax.swing.JTextField();
        jtMuestraCompra = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtMontoAConvertir = new javax.swing.JTextField();
        jbConvertir = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(500, 400));

        jLabel1.setFont(new java.awt.Font("Onyx", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Conversor de divisas");

        jcDivisas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcDivisasItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Black", 2, 14)); // NOI18N
        jLabel2.setText("COMPRA ($):");

        jLabel3.setFont(new java.awt.Font("Arial Black", 2, 14)); // NOI18N
        jLabel3.setText("VENTA ($):");

        jtMuestaVenta.setEditable(false);
        jtMuestaVenta.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jtMuestaVenta.setForeground(new java.awt.Color(0, 255, 102));

        jtMuestraCompra.setEditable(false);
        jtMuestraCompra.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jtMuestraCompra.setForeground(new java.awt.Color(0, 255, 51));

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel4.setText("Ingrese el monto: ");

        jbConvertir.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jbConvertir.setText("CONVERTIR");
        jbConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConvertirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcDivisas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtMuestraCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtMuestaVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(31, 31, 31)
                                .addComponent(jtMontoAConvertir))
                            .addComponent(jbConvertir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jcDivisas, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jtMuestraCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtMuestaVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtMontoAConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(46, 46, 46)
                .addComponent(jbConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConvertirActionPerformed
        
    }//GEN-LAST:event_jbConvertirActionPerformed

    private void jcDivisasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcDivisasItemStateChanged
        if(jcDivisas.getSelectedItem().equals(Divisas.DOLAR)){
        jtMuestaVenta.setText(dolarBlueVenta+"");
        jtMuestraCompra.setText(dolarBlueCompra+"");
        }else if(jcDivisas.getSelectedItem().equals(Divisas.DOLAROFICIAL)){
        jtMuestaVenta.setText(dolarOficialVenta+"");
        jtMuestraCompra.setText(dolarOficialCompra+"");
        }else if(jcDivisas.getSelectedItem().equals(Divisas.EURO)){
        jtMuestaVenta.setText(euroBlueVenta+"");
        jtMuestraCompra.setText(euroBlueCompra+"");
        }else if(jcDivisas.getSelectedItem().equals(Divisas.EUROOFICIAL)){
        jtMuestaVenta.setText(euroOficialVenta+"");
        jtMuestraCompra.setText(euroOficialCompra+"");
        }
    }//GEN-LAST:event_jcDivisasItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jbConvertir;
    private javax.swing.JComboBox<Divisas> jcDivisas;
    private javax.swing.JTextField jtMontoAConvertir;
    private javax.swing.JTextField jtMuestaVenta;
    private javax.swing.JTextField jtMuestraCompra;
    // End of variables declaration//GEN-END:variables

private void apiMonedas() throws Exception{
    
  try {
            URL url = new URL("https://api.bluelytics.com.ar/v2/latest");
            HttpURLConnection conexion = (HttpURLConnection) url.openConnection();
            conexion.setRequestMethod("GET");

            // Leer la respuesta JSON
            BufferedReader reader = new BufferedReader(new InputStreamReader(conexion.getInputStream()));
            StringBuilder response = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                response.append(line);
            }
            reader.close();

            // Analizar el JSON
            JSONObject jsonObject = new JSONObject(response.toString());

            // Acceder a los datos deseados
            JSONObject dolarOficial = jsonObject.getJSONObject("oficial");
            dolarOficialCompra = dolarOficial.getDouble("value_buy");
            dolarOficialVenta = dolarOficial.getDouble("value_sell");
            
            JSONObject dolarBlue = jsonObject.getJSONObject("blue");
            dolarBlueCompra = dolarBlue.getDouble("value_buy");
            dolarBlueVenta = dolarBlue.getDouble("value_sell");
            
            JSONObject euroOficial = jsonObject.getJSONObject("oficial_euro");
            euroOficialCompra = euroOficial.getDouble("value_buy");
            euroOficialVenta = euroOficial.getDouble("value_sell");

            JSONObject euroBlue = jsonObject.getJSONObject("blue_euro");
            euroBlueCompra = euroBlue.getDouble("value_buy");
            euroBlueVenta = euroBlue.getDouble("value_sell");


        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getStackTrace());
        }
    }


private void cargarCombo(){
    
    jcDivisas.addItem(Divisas.DOLAR);
    jcDivisas.addItem(Divisas.DOLAROFICIAL);
    jcDivisas.addItem(Divisas.EURO);
    jcDivisas.addItem(Divisas.EUROOFICIAL);

}
    

}

