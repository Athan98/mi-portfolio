CREATE DATABASE IF NOT EXISTS Proyecto_ShopOnline;
USE Proyecto_ShopOnline;

CREATE TABLE IF NOT EXISTS Categoria (
    idCategoria INT PRIMARY KEY AUTO_INCREMENT,
    NombreCategoria VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS Usuario (
    idUsuario INT PRIMARY KEY AUTO_INCREMENT,
    Nombre VARCHAR(255) NOT NULL,
    Apellido VARCHAR(255) NOT NULL,
    CorreoElectronico VARCHAR(255) NOT NULL,
    Contrase침a VARCHAR(255) NOT NULL,
    TipoUsuario ENUM('Comprador', 'Vendedor') DEFAULT 'Comprador'
);

CREATE TABLE IF NOT EXISTS Vendedor (
    idVendedor INT PRIMARY KEY AUTO_INCREMENT,
    NombreTienda VARCHAR(255) NULL,
    NombreVendedor VARCHAR(255) NOT NULL,
    CorreoElectronicoVendedor VARCHAR(255) NOT NULL,
    DireccionVendedor VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS Producto (
    idProducto INT PRIMARY KEY AUTO_INCREMENT,
    NombreProducto VARCHAR(255) NOT NULL,
    Descripcion VARCHAR(255) NULL,
    Precio DOUBLE NOT NULL,
    StockDisponible INT NOT NULL,
    idCategoria INT NOT NULL,
    idVendedor INT NOT NULL,
    ImagenProducto BLOB NULL, 
    DireccionImagen VARCHAR(255) NULL,
    FOREIGN KEY (idCategoria) REFERENCES Categoria(idCategoria),
    FOREIGN KEY (idVendedor) REFERENCES Vendedor(idVendedor)
);

CREATE TABLE IF NOT EXISTS Orden (
    idOrden INT PRIMARY KEY AUTO_INCREMENT,
    FechaOrden DATE,
    idUsuario INT NOT NULL,
    TipoOrden ENUM('Compra', 'Venta') NOT NULL,
    FOREIGN KEY (idUsuario) REFERENCES Usuario(idUsuario)
);

CREATE TABLE IF NOT EXISTS DetalleOrden (
    idDetalleOrden INT PRIMARY KEY AUTO_INCREMENT,
    idOrden INT NOT NULL,
    idProducto INT NOT NULL,
    Cantidad INT NOT NULL,
    PrecioUnitario DOUBLE NOT NULL,
    FOREIGN KEY (idOrden) REFERENCES Orden(idOrden),
    FOREIGN KEY (idProducto) REFERENCES Producto(idProducto)
);

CREATE TABLE IF NOT EXISTS ProductoVendedor (
    idProductosVendedor INT PRIMARY KEY AUTO_INCREMENT,
    idProducto INT NOT NULL,
    idVendedor INT NOT NULL,
    CantidadDisponible INT NOT NULL,
    InformacionEnvio VARCHAR(255) NULL,
    FOREIGN KEY (idProducto) REFERENCES Producto(idProducto),
    FOREIGN KEY (idVendedor) REFERENCES Vendedor(idVendedor)
);

CREATE TABLE IF NOT EXISTS CarritoCompras (
    idCarro INT PRIMARY KEY AUTO_INCREMENT,
    idUsuario INT NOT NULL,
    idProducto INT NOT NULL,
    CantidadProductos INT NOT NULL,
    PrecioTotal DOUBLE NOT NULL,
    FOREIGN KEY (idUsuario) REFERENCES Usuario(idUsuario),
    FOREIGN KEY (idProducto) REFERENCES Producto(idProducto)
);

CREATE TABLE IF NOT EXISTS ReseniasProducto (
    idResenias INT PRIMARY KEY AUTO_INCREMENT,
    idProducto INT NOT NULL,
    idUsuario INT NOT NULL,
    Calificacion INT NOT NULL,
    Comentario VARCHAR(255) NULL,
    FechaResenia DATE,
    FOREIGN KEY (idProducto) REFERENCES Producto(idProducto),
    FOREIGN KEY (idUsuario) REFERENCES Usuario(idUsuario)
);

CREATE TABLE IF NOT EXISTS LogAcciones (
    idAccion INT PRIMARY KEY AUTO_INCREMENT,
    Accion VARCHAR(255) NOT NULL,
    FechaHora TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

DELIMITER //

CREATE TRIGGER MostrarAccionOrden
AFTER INSERT ON Orden
FOR EACH ROW
BEGIN
    DECLARE accion VARCHAR(255);

    -- Determinar la acci칩n (compra o venta) bas치ndose en el TipoOrden
    IF NEW.TipoOrden = 'Compra' THEN
        SET accion = 'Compra';
    ELSE
        SET accion = 'Venta';
    END IF;

    -- Insertar informaci칩n en la tabla de log de acciones
    INSERT INTO LogAcciones (idAccion, Accion, FechaHora)
    VALUES (NEW.idOrden, accion, NOW());
END;
//

DELIMITER ;